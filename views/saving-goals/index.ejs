<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - WallGest</title>
    <link href="/styles/output.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body class="bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 min-h-screen">
    <div class="flex min-h-screen">
        <aside class="w-72 bg-white/90 backdrop-blur-sm border-r border-gray-200 shadow-lg">
            <div class="p-6 border-b border-gray-100">
                <div class="flex items-center gap-3 mb-6">
                    <div class="h-12 w-12 rounded-xl bg-gradient-to-r from-blue-600 to-purple-600 text-white grid place-items-center font-bold text-lg">W</div>
                    <div>
                        <h2 class="text-xl font-bold text-gray-900">Objectifs d'épargne</h2>
                        <p class="text-sm text-gray-500">Gérez vos objectifs</p>
                    </div>
                </div>
            </div>
            
            <nav class="p-4 space-y-2">
                <a href="/dashboard" class="flex items-center px-4 py-3 text-sm font-medium rounded-xl transition-all text-gray-600 hover:text-gray-900 hover:bg-gray-100">
                    <svg class="mr-3 h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                    </svg>
                    Retour au tableau de bord
                </a>
                
                <div class="pt-4 mt-4 border-t border-gray-200">
                    <button onclick="document.getElementById('createGoalModal').classList.remove('hidden')" class="w-full flex items-center justify-center px-4 py-3 bg-gradient-to-r from-emerald-500 to-emerald-600 text-white text-sm font-medium rounded-xl hover:from-emerald-600 hover:to-emerald-700 transition-all transform hover:scale-105 shadow-lg">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                        Nouvel objectif
                    </button>
                </div>
                
                <div class="pt-4 mt-4 border-t border-gray-200">
                    <a href="/auth/logout" class="flex items-center px-4 py-3 text-sm font-medium rounded-xl transition-all text-red-600 hover:text-red-700 hover:bg-red-50">
                        <svg class="mr-3 h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
                        </svg>
                        Déconnexion
                    </a>
                </div>
            </nav>
        </aside>

        <main class="flex-1 overflow-auto">
            <div class="p-8">
                <div class="mb-8">
                    <h1 class="text-3xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent mb-2">Objectifs d'épargne</h1>
                    <p class="text-gray-600">Définissez et suivez vos objectifs d'épargne par catégorie</p>
                </div>

                <% if (savingGoals && savingGoals.length > 0) { %>
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        <% savingGoals.forEach(goal => { %>
                            <div class="bg-white/80 backdrop-blur-sm rounded-2xl p-6 shadow-xl border border-white/20 hover:shadow-2xl transition-all duration-300">
                                <div class="flex items-start justify-between mb-4">
                                    <div>
                                        <h3 class="text-lg font-semibold text-gray-900"><%= goal.title %></h3>
                                        <p class="text-sm text-gray-500"><%= goal.Category.title %></p>
                                    </div>
                                    <span class="px-3 py-1 text-xs font-medium rounded-full bg-gradient-to-r from-blue-500 to-purple-600 text-white">
                                        <%= goal.priority %>
                                    </span>
                                </div>
                                
                                <div class="mb-4">
                                    <div class="flex justify-between text-sm text-gray-600 mb-2">
                                        <span>Progrès</span>
                                        <span><%= goal.currentAmount %> / <%= goal.targetAmount %> MAD</span>
                                    </div>
                                    <div class="w-full bg-gray-200 rounded-full h-2">
                                        <div class="bg-gradient-to-r from-emerald-500 to-emerald-600 h-2 rounded-full" style="width: <%= (goal.currentAmount / goal.targetAmount * 100).toFixed(1) %>%"></div>
                                    </div>
                                    <p class="text-xs text-gray-500 mt-1"><%= (goal.currentAmount / goal.targetAmount * 100).toFixed(1) %>% complété</p>
                                </div>
                                
                                <% if (goal.deadline) { %>
                                    <p class="text-sm text-gray-600 mb-4">
                                        <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                        </svg>
                                        Échéance: <%= new Date(goal.deadline).toLocaleDateString('fr-FR') %>
                                    </p>
                                <% } %>
                                
                                <div class="flex space-x-2">
                                    <button onclick="addProgress(<%= goal.id %>)" class="flex-1 bg-gradient-to-r from-blue-500 to-purple-600 text-white text-sm font-medium py-2 px-4 rounded-xl hover:from-blue-600 hover:to-purple-700 transition-all">
                                        Ajouter progrès
                                    </button>
                                    <button onclick="deleteGoal(<%= goal.id %>)" class="bg-red-500 text-white text-sm font-medium py-2 px-4 rounded-xl hover:bg-red-600 transition-all">
                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                        </svg>
                                    </button>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                <% } else { %>
                    <div class="text-center py-12">
                        <svg class="mx-auto h-24 w-24 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.592 1L21 6m-2 6h2m-8 6h2m-6 4H5a2 2 0 01-2-2V7a2 2 0 012-2h14a2 2 0 012 2v10a2 2 0 01-2 2h-2M5 7h14"></path>
                        </svg>
                        <h3 class="mt-4 text-lg font-medium text-gray-900">Aucun objectif d'épargne</h3>
                        <p class="mt-2 text-gray-500">Créez votre premier objectif d'épargne pour commencer.</p>
                        <button onclick="document.getElementById('createGoalModal').classList.remove('hidden')" class="mt-4 bg-gradient-to-r from-emerald-500 to-emerald-600 text-white px-6 py-3 rounded-xl hover:from-emerald-600 hover:to-emerald-700 transition-all">
                            Créer un objectif
                        </button>
                    </div>
                <% } %>
            </div>
        </main>
    </div>

    <div id="createGoalModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center">
        <div class="bg-white rounded-2xl p-6 w-full max-w-md mx-4">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">Nouvel objectif d'épargne</h3>
            <form action="/saving-goals" method="POST">
                <div class="space-y-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Titre</label>
                        <input type="text" name="title" required class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Montant cible (MAD)</label>
                        <input type="number" name="targetAmount" required class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Catégorie</label>
                        <select name="categoryId" required class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                            <option value="">Sélectionner une catégorie</option>
                            <!-- Categories will be loaded dynamically -->
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Priorité</label>
                        <select name="priority" class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                            <option value="low">Faible</option>
                            <option value="medium" selected>Moyenne</option>
                            <option value="high">Élevée</option>
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Date limite (optionnel)</label>
                        <input type="date" name="deadline" class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                    </div>
                </div>
                <div class="flex space-x-3 mt-6">
                    <button type="submit" class="flex-1 bg-gradient-to-r from-emerald-500 to-emerald-600 text-white py-3 px-6 rounded-xl hover:from-emerald-600 hover:to-emerald-700 transition-all">
                        Créer
                    </button>
                    <button type="button" onclick="document.getElementById('createGoalModal').classList.add('hidden')" class="px-6 py-3 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-all">
                        Annuler
                    </button>
                </div>
            </form>
        </div>
    </div>

    <div id="progressModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center">
        <div class="bg-white rounded-2xl p-6 w-full max-w-md mx-4">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">Ajouter du progrès</h3>
            <form id="progressForm">
                <div class="space-y-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Montant à ajouter (MAD)</label>
                        <input type="number" name="amount" required class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                    </div>
                </div>
                <div class="flex space-x-3 mt-6">
                    <button type="submit" class="flex-1 bg-gradient-to-r from-blue-500 to-purple-600 text-white py-3 px-6 rounded-xl hover:from-blue-600 hover:to-purple-700 transition-all">
                        Ajouter
                    </button>
                    <button type="button" onclick="document.getElementById('progressModal').classList.add('hidden')" class="px-6 py-3 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-all">
                        Annuler
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        function addProgress(goalId) {
            document.getElementById('progressForm').action = `/saving-goals/${goalId}/progress`;
            document.getElementById('progressModal').classList.remove('hidden');
        }

        function deleteGoal(goalId) {
            if (confirm('Êtes-vous sûr de vouloir supprimer cet objectif ?')) {
                fetch(`/saving-goals/${goalId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                }).then(() => {
                    location.reload();
                });
            }
        }

        fetch('/dashboard')
            .then(response => response.text())
            .then(html => {
                const parser = new DOMParser();
                const doc = parser.parseFromString(html, 'text/html');
                const categories = doc.querySelectorAll('a[href*="/dashboard/category/"]');
                const select = document.querySelector('select[name="categoryId"]');
                
                categories.forEach(link => {
                    const categoryId = link.href.split('/').pop();
                    const categoryName = link.querySelector('span').textContent;
                    const option = document.createElement('option');
                    option.value = categoryId;
                    option.textContent = categoryName;
                    select.appendChild(option);
                });
            });
    </script>
</body>
</html>
